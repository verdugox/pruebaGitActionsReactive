name: CI/CD Pipeline for AKS

on:
  push:
    branches:
      - develop  # Ejecutar solo en 'develop'
  workflow_dispatch:  # Permitir ejecución manual

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Descargar código fuente
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar JDK 17
      - name: Set up Java version
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Construir la aplicación con Maven
      - name: Build with Maven
        working-directory: ./client-service
        run: mvn clean install

      # 4. Iniciar sesión en Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5. Construir la imagen de Docker (con `.` al final)
      - name: Build Docker Image
        working-directory: ./client-service
        run: docker build -t verdugox/springboot-app:1.0 .

      # 6. Subir la imagen a Docker Hub
      - name: Push Docker Image
        run: docker push verdugox/springboot-app:1.0

  deploy-to-aks:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      # 1. Autenticarse en Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 2. Configurar contexto de AKS
      - name: Set AKS Context
        run: az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER }}

      # 3. Verificar que los archivos en k8s/ existen antes del despliegue
      - name: List Kubernetes YAML files
        run: ls -R $GITHUB_WORKSPACE/k8s

      # 4. Desplegar en AKS
      - name: Deploy to AKS
        run: |
          kubectl apply -f $GITHUB_WORKSPACE/k8s/deployment.yaml
          kubectl apply -f $GITHUB_WORKSPACE/k8s/service.yaml

      # 5. Reiniciar los pods después del despliegue
      - name: Restart AKS Pods
        run: kubectl rollout restart deployment springboot-app
